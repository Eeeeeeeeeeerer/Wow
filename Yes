local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local Chat = game:GetService("Chat")
local Workspace = game:GetService("Workspace")

-- Get the local player
local lp = Players.LocalPlayer

-- Configuration settings
local settings = {
    antiGearsEnabled = false, -- Anti-gears is disabled by default
    antiVgEnabled = false, -- Anti-vampire gear is disabled by default
    antiAbuseEnabled = false -- Anti-abuse is disabled by default
}

-- Function to send a chat message
local function sendChatMessage(message)
    if lp.Character and lp.Character:FindFirstChild("Head") then
        Chat:Chat(lp.Character.Head, message, Enum.ChatColor.Blue)
    end
end

-- Function to handle gear commands
local function handleGearCommand(target)
    if settings.antiGearsEnabled then
        game.Players:Chat("gears have been disabled in this server!")
        local function respawnPlayer(playerName)
            for _ = 1, 10 do
                game.Players:Chat("respawn " .. playerName)
                task.wait(0.1)
            end
        end

        if target == "all" then
            for _, p in ipairs(Players:GetPlayers()) do
                respawnPlayer(p.Name)
            end
        elseif target == "others" then
            for _, p in ipairs(Players:GetPlayers()) do
                if p ~= lp then
                    respawnPlayer(p.Name)
                end
            end
        else
            respawnPlayer(target)
        end
    end
end

-- Function to handle chat messages
local function onChatMessage(player, message)
    local lowerMessage = message:lower()

    -- Restricted command, only "HelloNoobsloljkw" can run this
    if lowerMessage:find("^%-check$") and player.Name == "HelloNoobsloljkw" then
        game.Players:Chat("h i indeed use Quantum.")
        return
    end

    -- General commands that only affect the player who uses them (including anti gears, anti vg, and other commands)
    local commands = {
        ["gear me"] = function() handleGearCommand(player.Name) end,
        ["gear all"] = function() handleGearCommand("all") end,
        ["gear others"] = function() handleGearCommand("others") end,
        ["%-music%d$"] = function()
            local musicId = {
                ["-music1"] = "7266001792",
                ["-music2"] = "9245561450",
                ["-music3"] = "5410086218",
                ["-music4"] = "6555905311",
                ["-music5"] = "8756309991"
            }
            local id = musicId[lowerMessage]
            if id then
                game.Players:Chat("music " .. id)
                game.Players:Chat("h playing '" .. (lowerMessage:sub(8) or "???") .. "'")
            end
        end,
        ["%-banhammer$"] = function() game.Players:Chat("gear me 10468797") end,
        ["%-antikill$"] = function()
            game.Players:Chat("h anti kill enabled!")
            if lp.Character and lp.Character:FindFirstChild("Humanoid") then
                lp.Character.Humanoid.Died:Connect(function()
                    game.Players:Chat("reset me")
                end)
            end
        end,
        ["%-disableantikill$"] = function()
            game.Players:Chat("h anti kill disabled!")
            if lp.Character and lp.Character:FindFirstChild("Humanoid") then
                lp.Character.Humanoid.Died:Disconnect()
            end
        end,
        ["%-kick%s+%w+$"] = function()
            local playerName = lowerMessage:match("^%-kick%s+(%w+)$")
            local targetPlayer = Players:FindFirstChild(playerName)
            if targetPlayer then
                while targetPlayer do
                    game.Players:Chat("hat " .. playerName .. " 18137588505")
                    game.Players:Chat("blind " .. playerName)
                    game.Players:Chat("pm " .. playerName .. " Ã°Å¸Ëœâ€š")
                    game.Players:Chat("setgrav " .. playerName .. " -10000")
                    game.Players:Chat("jump " .. playerName)
                    game.Players:Chat("ff " .. playerName)
                    game.Players:Chat("gear " .. playerName .. " 253519495")
                    task.wait(1)
                end
            end
        end,
        ["%-antivg$"] = function()
            settings.antiVgEnabled = true
            game.Players:Chat("h Anti-vampire gear enabled!")
        end,
        ["%-disableantivg$"] = function()
            settings.antiVgEnabled = false
            game.Players:Chat("h Anti-vampire gear disabled!")
        end,
        ["/c system$"] = function() game.Players:Chat("h " .. lp.Name .. " is using c system sneaky!") end,
        ["%-antigears$"] = function()
            settings.antiGearsEnabled = true
            game.Players:Chat("h Anti-gears enabled!")
        end,
        ["%-disableantigears$"] = function()
            settings.antiGearsEnabled = false
            game.Players:Chat("h Anti-gears disabled!")
        end,
        ["%-rejoin$"] = function() TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, lp) end,
        ["%-antiabuse$"] = function()
            settings.antiAbuseEnabled = not settings.antiAbuseEnabled
            game.Players:Chat("h anti abuse " .. (settings.antiAbuseEnabled and "enabled!" or "disabled!"))
        end
    }

    for pattern, handler in pairs(commands) do
        if lowerMessage:find(pattern) then
            handler()
            return
        end
    end

    if settings.antiAbuseEnabled then
        local abuseCommands = {
            ["blind h"] = "unblind me",
            ["jail h"] = "clr",
            ["punish h"] = "unpunish me",
            ["setgrav h"] = "reset me",
            ["punish all"] = "unpunish all\npunish " .. player.Name,
            ["jail all"] = "clr\njail " .. player.Name,
            ["setgrav all"] = function()
                game.Players:Chat("setgrav " .. player.Name .. " inf")
                task.wait(2)
                for _ = 1, 10 do
                    game.Players:Chat("respawn " .. player.Name)
                    task.wait(0.1)
                end
            end
        }
        for command, response in pairs(abuseCommands) do
            if type(response) == "function" then
                if lowerMessage:find(command) then
                    response()
                    return
                end
            else
                if lowerMessage:find(command) then
                    game.Players:Chat(response)
                    return
                end
            end
        end
    end
end

-- Function to bind chat event to a player
local function bindChatToPlayer(player)
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end

-- Bind chat event to players already in the game
for _, player in ipairs(Players:GetPlayers()) do
    bindChatToPlayer(player)
end

-- Bind chat event to new players who join
Players.PlayerAdded:Connect(function(player)
    bindChatToPlayer(player)
    onPlayerAdded(player)
end)

-- Function to handle player joining
local function onPlayerAdded(player)
    if player.Name == "HelloNoobsloljkw" then
        game.Players:Chat("h the owner of quantum has joined!")
        createTextLabel(player)
    end

    if player ~= lp then
        local welcomeMessage = string.format(
            "welcome %s\n" ..
            "user: %s\n" ..
            "display name: %s",
            player.Name, player.Name, player.DisplayName
        )
        game.Players:Chat(welcomeMessage)
    end
end

-- Function to create a text label above a player
local function createTextLabel(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local textLabel = Instance.new("BillboardGui")
        textLabel.Name = "QuantumOwnerLabel"
        textLabel.Size = UDim2.new(0, 200, 0, 50)
        textLabel.StudsOffset = Vector3.new(0, 2, 0)
        textLabel.Adornee = player.Character.Head
        textLabel.Parent = player.Character.Head
        textLabel.Enabled = true
        textLabel.AlwaysOnTop = true
        textLabel.ResetOnSpawn = false

        local text = Instance.new("TextLabel")
        text.Name = "Text"
        text.Text = "Quantum Owner"
        text.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black color
        text.TextScaled = true
        text.Size = UDim2.new(1, 0, 1, 0)
        text.BackgroundTransparency = 1 -- Make the background fully transparent
        text.Parent = textLabel

        -- Ensure the text label is only visible to the local player
        textLabel.Parent = lp.PlayerGui
    end
end

-- Check if specific player is already in the server
local function checkExistingPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name == "HelloNoobsloljkw" then
            game.Players:Chat("h The owner of quantum has joined!")
            createTextLabel(player)
            break
        end
    end
end

-- Function to grab admin pad
local function admingrab()
    while true do
        local adminPads = Workspace.Terrain:FindFirstChild("_Game")
            and Workspace.Terrain["_Game"]:FindFirstChild("Admin")
            and Workspace.Terrain["_Game"].Admin:FindFirstChild("Pads")

        if adminPads then
            local playerAdminPad = adminPads:FindFirstChild(lp.Name .. "'s admin")
            if not playerAdminPad then
                local touchPad = adminPads:FindFirstChild("Touch to get admin")
                if touchPad then
                    local padHead = touchPad:FindFirstChild("Head")
                    if padHead then
                        local padCFrame = padHead.CFrame
                        task.wait(1)
                        padHead.CanCollide = false
                        repeat task.wait(1) until lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
                        padHead.CFrame = lp.Character.HumanoidRootPart.CFrame
                        task.wait(1)
                        padHead.CFrame = padCFrame
                        padHead.CanCollide = true
                    else
                        warn("Pad Head not found.")
                    end
                else
                    warn("Touch to get admin pad not found.")
                end
            end
        else
            warn("Admin Pads not found.")
        end

        task.wait(1)
    end
end

-- Check if local player exists
if lp then
    print("LocalPlayer found, script is running...")

    -- Wait 5 seconds before sending the initial chat message
    task.wait(5)
    game.Players:Chat("h quantum loaded!\n\n\n")

    -- Start admin grab
    coroutine.resume(coroutine.create(admingrab))

    -- Load Infinite Yield
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

    -- Connect chat listeners for local player and other players
    bindChatToPlayer(lp)
    Players.PlayerAdded:Connect(onPlayerAdded)

    -- Check if the specific player is already in the server
    checkExistingPlayer()
else
    warn("LocalPlayer not found.")
end
